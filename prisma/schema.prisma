// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String?
  isActive  Boolean   @default(false)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  Book      Book[]
  Rental    Rental[]
  Donate    Donate[]
}

model Book {
  id          Int       @id @default(autoincrement())
  title       String
  cover       String
  code        String
  donorUserId Int       @map("donor_user_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")
  User        User      @relation(fields: [donorUserId], references: [id])
  Donate      Donate[]
}

model Rental {
  id                 Int       @id @default(autoincrement())
  borrowerId         Int       @map("borrower_id")
  checkoutDate       DateTime  @map("checkout_date")
  expectedReturnDate DateTime  @map("expected_return_date")
  returnDate         DateTime? @map("return_date")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime? @updatedAt @map("updated_at")
  User               User      @relation(fields: [borrowerId], references: [id])
}

model Donate {
  id        Int       @id @default(autoincrement())
  donorId   Int       @map("donor_id")
  bookId    Int       @map("book_id")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  User      User      @relation(fields: [donorId], references: [id])
  Book      Book      @relation(fields: [bookId], references: [id])
}
